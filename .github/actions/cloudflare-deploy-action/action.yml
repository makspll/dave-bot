name: 'Cloudflare Deploy Action'
description: 'Build and deploy a Cloudflare Worker'
inputs:
  apiToken:
    description: 'Cloudflare API Token'
    required: true
  accountId:
    description: 'Cloudflare Account ID'
    required: true
  telegramApiKey:
    description: 'Telegram API Key'
    required: true
  telegramWebhookSecret:
    description: 'Telegram Webhook Secret included in the X-Telegram-Webhook-Secret header'
    required: true
  openAiKey:
    description: 'Open AI Key'
    required: true
  lokiUsername:
    description: 'Loki Username'
    required: true
  lokiPassword:
    description: 'Loki Password'
    required: true
  scrapflyApiKey:
    description: 'ScrapFly API Key'
    required: true
  godId:
    description: 'God ID'
    required: true
  mainChatId:
    description: 'Main Chat ID'
    required: true
  configPath:
    description: 'Path to wrangler.toml'
    required: false
    default: 'wrangler.toml'
  workingDirectory:
    description: 'Working Directory'
    required: false
    default: '.'
  workerUrl:
    description: 'Worker URL'
    required: true
  environment:
    description: 'Environment'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - name: Replace wrangler.toml with ${{ inputs.configPath }}
      working-directory: ${{ inputs.workingDirectory }}
      if: ${{ inputs.configPath != 'wrangler.toml' }}
      shell: bash
      run: |
        mv ${{ inputs.configPath }} wrangler.toml
    - name: Retrieve wrangler version
      shell: bash
      id: wrangler-version
      run: |
        echo "wrangler-version=$(grep -oP '"wrangler":\s*"\K[0-9]+\.[0-9]+\.[0-9]+' ${{ inputs.workingDirectory }}/package.json)" >> $GITHUB_OUTPUT
    - name: Build & Deploy Worker
      uses: cloudflare/wrangler-action@v3
      with:
        quiet: false
        apiToken: ${{ inputs.apiToken }}
        accountId: ${{ inputs.accountId }}
        wranglerVersion: ${{ steps.wrangler-version.outputs.wrangler-version }}
        secrets: |
          TELEGRAM_WEBHOOK_SECRET
          TELEGRAM_API_KEY
          OPEN_AI_KEY
          GOD_ID
          MAIN_CHAT_ID
          LOKI_USERNAME
          LOKI_PASSWORD
          ENVIRONMENT
          SCRAPFLY_API_KEY
          WORKER_URL
        workingDirectory: ${{ inputs.workingDirectory }}
        preCommands: |
          echo "Running wrangler migrations from $PWD"
          ls -la 
          npx wrangler d1 migrations apply DB --remote
          echo "Wrangler migrations completed"

      env:
        TELEGRAM_WEBHOOK_SECRET: ${{ inputs.telegramWebhookSecret }}
        TELEGRAM_API_KEY: ${{ inputs.telegramApiKey }}
        OPEN_AI_KEY: ${{ inputs.openAiKey }}
        GOD_ID: ${{ inputs.godId }}
        MAIN_CHAT_ID: ${{ inputs.mainChatId }}
        LOKI_USERNAME: ${{ inputs.lokiUsername }}
        LOKI_PASSWORD: ${{ inputs.lokiPassword }}
        ENVIRONMENT: ${{ inputs.environment }}
        SCRAPFLY_API_KEY: ${{ inputs.scrapflyApiKey }}
        WORKER_URL: ${{ inputs.workerUrl }}